version: "3"

services:
  app:
    build:
      context: .
      dockerfile:
        ci/app/Dockerfile
    env_file:
      - ci/app/.env
    labels:
      NAME: "django_app"
    volumes:
      - app_static_volume:/opt/app/static
    depends_on:
      - postgres
    networks:
      - internal

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
      - ./data:/data/:ro
      - app_static_volume:/home/app/web/static
    depends_on:
      - app
    ports:
      - "80:80"
    networks:
      - internal
      - external_network

  postgres:
    build:
      context: .
      dockerfile:
        ci/postgres/Dockerfile
    env_file:
      - ci/postgres/.env
    volumes:
      - $HOME/postgresql-compose-edition/data:/var/lib/postgresql/data
      - ./sqlite_to_postgres/movies_database.sql:/docker-entrypoint-initdb.d/movies_database.sql
    networks:
      - internal

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    labels:
      NAME: 'Elastic-search'
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
    depends_on:
      - postgres
    networks:
      - internal
      - external_network

  postgres-es-etl:
    build:
      context: .
      dockerfile:
        ci/etl_service/Dockerfile
    env_file:
      - ci/etl_service/.env
    labels:
      NAME: "etl_service"
    depends_on:
      - postgres
      - app
      - elastic
    networks:
      - internal

networks:
  external_network: { }
  internal:
    internal: true

volumes:
  app_static_volume: { }

